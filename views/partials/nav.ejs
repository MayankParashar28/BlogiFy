<nav class="navbar navbar-expand-lg sticky-top rounded-2  shadow-sm" id="mainNavbar">
  <div class="container-fluid d-flex justify-content-between">
    <!-- Brand -->
    <a class="navbar-brand fw-bold fs-4" href="/main">
      <i class="bi bi-pen"></i> WanderWords
    </a>

    <!-- Toggle Button -->
    <button class="navbar-toggler navbar-dark-theme border-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <!-- Navbar Content -->
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link active fw-semibold" aria-current="page" href="/">
            <i class="bi bi-house-door"></i> Blogs
          </a>
        </li>
      </ul>

      <ul class="navbar-nav ms-auto align-items-center">
        <% if (locals.user) { %>
          <li class="nav-item">
            <a class="nav-link fw-semibold" href="/blog/add-new">
              <i class="bi bi-plus-circle"></i> Add Blog
            </a>
          </li>

          <!-- Profile Dropdown -->
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="navbarDropdown" role="button"
              data-bs-toggle="dropdown" aria-expanded="false">
              <i class="bi bi-person-circle fs-5 me-1"></i>
              <span class="fw-semibold"><%= locals.user.email %></span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/user/profile"><i class="bi bi-person"></i> Profile</a></li>
              <li><a class="dropdown-item text-danger" href="/user/logout"><i class="bi bi-box-arrow-right"></i> Log Out</a></li>
            </ul>
          </li>

          <!-- Notification Bell -->
          <li class="nav-item position-relative">
            <a class="nav-link" href="/notifications">
              <i class="bi bi-bell fs-5"></i>
              <span id="notification-count"
                    class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                    style="display: none;">0</span>
            </a>
          </li>

          <!-- AI Access Button -->
          <li class="nav-item">
            <a id="ai-access-btn" class="nav-link fw-semibold" href="#">
              <i class="bi bi-robot fs-5"></i>
            </a>
          </li>
        <% } else { %>
          <li class="nav-item"><a class="nav-link fw-semibold" href="/user/signup"><i class="bi bi-person-plus"></i> Create Account</a></li>
          <li class="nav-item"><a class="nav-link fw-semibold" href="/user/signin"><i class="bi bi-box-arrow-in-right"></i> Sign In</a></li>
        <% } %>

        <!-- Theme Toggle Button -->
        <div class="user-section ms-3 border-start border-end">
          <button class="theme-toggle" id="themeToggle" style="background: none; border: none;">
            <i class="bi bi-sun-fill" id="lightIcon"></i>
            <i class="bi bi-moon-fill" id="darkIcon"></i>
          </button>
        </div>
      </ul>

      <!-- Search Form -->
      <form class="d-flex ms-3 position-relative" method="GET" action="/" id="searchForm">
        <div id="searchContainer" class="input-group" style="transition: all 0.3s ease; gap: 10px;">
          <input id="searchInput"
                 class="form-control rounded-pill"
                 aria-label="Search"
                 autocomplete="off"
                 type="text"
                 name="searchQuery"
                 placeholder="Find your next blog..."
                 value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
                 style="width: 0; padding: 0; border: none; opacity: 0; transition: width 0.3s ease, padding 0.3s ease, opacity 0.3s ease;">
          <button id="searchBtn" type="button"
                  style="width: 35px; height: 35px; border: none; background-color: transparent; border-radius: 50%; box-shadow: 0 2px 5px rgba(44, 41, 41, 0.2); transition: background-color 0.3s, transform 0.2s;"
                  class="d-flex align-items-center justify-content-center">
            <i class="bi bi-search"></i>
          </button>
        </div>
      </form>
    </div>
  </div>
</nav>

<!-- Bootstrap Icons + Bundle -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>

<!-- Inline Dark Theme Style -->
<style>
  :root {
    --navbar-bg-light: #ffffff;
    --navbar-text-light: #212529;
    --navbar-bg-dark: #1f1f1f;
    --navbar-text-dark: #ffffff;
  }

  .navbar {
    background-color: var(--navbar-bg-light);
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .navbar .nav-link,
  .navbar .navbar-brand {
    color: var(--navbar-text-light);
    transition: color 0.3s ease;
  }

  [data-theme="dark"] .navbar {
    background-color: var(--navbar-bg-dark);
  }

  [data-theme="dark"] .navbar .nav-link,
  [data-theme="dark"] .navbar .navbar-brand {
    color: var(--navbar-text-dark);
  }

  .theme-toggle {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .theme-toggle:hover {
    transform: scale(1.1);
  }

  .theme-toggle i {
    font-size: 1.2rem;
    color: var(--navbar-text-light);
    transition: color 0.3s ease;
  }

  [data-theme="dark"] .theme-toggle i {
    color: var(--navbar-text-dark);
  }

  /* Search bar styles */
  #searchBtn i {
    color: var(--navbar-text-light);
    transition: color 0.3s ease;
  }

  [data-theme="dark"] #searchBtn i {
    color: var(--navbar-text-dark);
  }

  #searchInput {
    background-color: var(--navbar-bg-light);
    color: var(--navbar-text-light);
    transition: all 0.3s ease;
  }

  [data-theme="dark"] #searchInput {
    background-color: var(--navbar-bg-dark);
    color: var(--navbar-text-dark);
  }

  #searchInput::placeholder {
    color: var(--navbar-text-light);
    opacity: 0.7;
  }

  [data-theme="dark"] #searchInput::placeholder {
    color: var(--navbar-text-dark);
    opacity: 0.7;
  }
</style>

<!-- Scripts -->
<script>
  // Theme toggle
  const toggleBtn = document.getElementById("themeToggle");
  const lightIcon = document.getElementById("lightIcon");
  const darkIcon = document.getElementById("darkIcon");
  const html = document.documentElement;

  // Check for saved theme preference
  const getPreferredTheme = () => {
    const savedTheme = localStorage.getItem('theme');
    return savedTheme || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  };

  // Apply theme
  const setTheme = (theme) => {
    html.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
    
    // Update icons
    lightIcon.style.display = theme === 'dark' ? 'none' : 'inline';
    darkIcon.style.display = theme === 'dark' ? 'inline' : 'none';
  };

  // Initialize theme
  setTheme(getPreferredTheme());

  // Toggle theme on button click
  toggleBtn.addEventListener('click', () => {
    const currentTheme = html.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    setTheme(newTheme);
  });

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      setTheme(e.matches ? 'dark' : 'light');
    }
  });

  // Listen for theme changes from other components
  window.addEventListener('themeChange', (e) => {
    setTheme(e.detail.theme);
  });

  // AI Access Button
  document.getElementById("ai-access-btn")?.addEventListener("click", async (e) => {
    e.preventDefault();
    try {
      const res = await fetch("/subscription/subscribe");
      const data = await res.json();
      if (data.url) window.location.href = data.url;
      else alert("Error: Unable to process payment.");
    } catch (err) {
      console.error("Payment Error:", err);
      alert("Something went wrong. Try again later.");
    }
  });

  // Notification Count
  async function updateNotificationCount() {
    try {
      const res = await fetch("/notifications/unread-count");
      const data = await res.json();
      const badge = document.getElementById("notification-count");
      if (data.count > 0) {
        badge.textContent = data.count;
        badge.style.display = "inline-block";
      } else {
        badge.style.display = "none";
      }
    } catch (err) {
      console.error("Failed to load notification count", err);
    }
  }
  document.addEventListener("DOMContentLoaded", updateNotificationCount);
  setInterval(updateNotificationCount, 10000);

  // Search Expand
  const searchBtn = document.getElementById('searchBtn');
  const searchForm = document.getElementById('searchForm');
  const searchInput = document.getElementById('searchInput');
  const searchContainer = document.getElementById('searchContainer');

  searchBtn.addEventListener('click', () => {
    if (searchInput.style.width === '0px' || searchInput.style.width === '') {
      searchInput.style.width = '200px';
      searchInput.style.padding = '0.375rem 0.75rem';
      searchInput.style.border = '1px solid #ced4da';
      searchInput.style.opacity = '1';
      searchInput.focus();
    } else if (searchInput.value.trim()) {
      searchForm.submit();
    } else {
      searchInput.style.width = '0';
      searchInput.style.padding = '0';
      searchInput.style.border = 'none';
      searchInput.style.opacity = '0';
    }
  });

  document.addEventListener('click', (e) => {
    if (!searchForm.contains(e.target)) {
      searchInput.style.width = '0';
      searchInput.style.padding = '0';
      searchInput.style.border = 'none';
      searchInput.style.opacity = '0';
    }
  });
</script>